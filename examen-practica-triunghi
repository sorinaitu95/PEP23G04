from math import cos, acos, degrees, radians

class Triangle:
    def __init__(self, AB=60, BC=60, CA=60, A=1, B=1, C=1):
        self.AB = AB
        self.BC = BC
        self.CA = CA
        self.A = A
        self.B = B
        self.C = C

    def modify_angle(self, angle, degrees):
        if angle not in ['AB', 'BC', 'CA']:
            raise ValueError("Invalid angle parameter. Use 'AB', 'BC', or 'CA'.")

        if angle == 'AB':
            self.AB += degrees
            if self.AB <= 0 or self.AB >= 180:
                raise ValueError("Modified angle is outside the valid interval (0, 180).")

            original_A = self.A
            original_B = self.B

            self.C = (original_A * 2 + original_B**2 - 2 * original_A * original_B * cos(radians(self.AB)))**0.5
            self.BC = degrees(acos((original_B * 2 + self.C**2 - original_A**2) / (2 * original_B * self.C)))
            self.CA = degrees(acos((self.C**2 + original_A**2 - original_B**2) / (2 * self.C * original_A)))

        elif angle == 'BC':
            self.BC += degrees
            if self.BC <= 0 or self.BC >= 180:
                raise ValueError("Modified angle is outside the valid interval (0, 180).")

            original_B = self.B
            original_C = self.C

            self.A = (original_B**2 + original_C**2 - 2 * original_B * original_C * cos(radians(self.BC)))**0.5
            self.CA = degrees(acos((original_C**2 + self.A**2 - original_B**2) / (2 * original_C * self.A)))
            self.AB = degrees(acos((self.A**2 + original_B**2 - original_C**2) / (2 * self.A * original_B)))

        elif angle == 'CA':
            self.CA += degrees
            if self.CA <= 0 or self.CA >= 180:
                raise ValueError("Modified angle is outside the valid interval (0, 180).")

            original_C = self.C
            original_A = self.A

            self.B = (original_C**2 + original_A**2 - 2 * original_C * original_A * cos(radians(self.CA)))**0.5
            self.AB = degrees(acos((original_A**2 + self.B**2 - original_C**2) / (2 * original_A * self.B)))
            self.BC = degrees(acos((self.B**2 + original_C**2 - original_A**2) / (2 * self.B * original_C)))

    def modify_side(self, side, meters):
        if side not in ['A', 'B', 'C']:
            raise ValueError("Invalid side parameter. Use 'A', 'B', or 'C'.")

        if side == 'A':
            self.A += meters
            if self.A <= 0:
                raise ValueError("Modified side is less than or equal to 0.")

            factor = (self.A + meters) / self.A
            self.B *= factor
            self.C *= factor

        elif side == 'B':
            self.B += meters
            if self.B <= 0:
                raise ValueError("Modified side is less than or equal to 0.")

            factor = (self.B + meters) / self.B
            self.A *= factor
            self.C *= factor

        elif side == 'C':
            self.C += meters
            if self.C <= 0:
                raise ValueError("Modified side is less than or equal to 0.")

            factor = (self.C + meters) / self.C
            self.A *= factor
            self.B *= factor
